<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="AccessManageDAO">

	<typeAlias  alias="egovMap"    type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="accessManageVO"   type="daewooInfo.admin.access.bean.AccessManageVO"/>

	<insert id="insertFilterAccess" parameterClass="accessManageVO">
		INSERT INTO T_FILTER_ACCESS (
		  SEQ
		 ,LOGIN_ID
		 ,MEMBER_ID
		 ,TYPE
		 ,TABLE_NM
		 ,IP
		 ,REG_DATE
		 ,CONNECT_IP
		   )
		VALUES (
		  SEQ_FILTER_ACCESS.NEXTVAL
		 ,#loginId#
		 ,#memberId#
		 ,#type#
		 ,#tableNm#
		 /*,SYS_CONTEXT('USERENV', 'IP_ADDRESS')*/
		 ,#ip#
		 ,SYSDATE
		 ,#connectIp#
		 )
	</insert>

	<select id="selectAccessIndiList" parameterClass="accessManageVO" resultClass="egovMap">
		<![CDATA[
                SELECT  *
			  	FROM  (
					SELECT ROWNUM RNUM, ALL_LIST.*
			 			 FROM  (
		        			   	 SELECT  SEQ	   AS   "seq"
		        			   	 		,LOGIN_ID  AS	"loginId"
										,MEMBER_ID AS 	"memberId"
										,CASE WHEN TYPE='C' THEN '등록'
											  WHEN TYPE='R' THEN '조회'
										 	  WHEN TYPE='U' THEN '수정'
										 	  WHEN TYPE='D' THEN '삭제'
										 	  WHEN TYPE='P' THEN '인쇄'
										 	  WHEN TYPE='W' THEN '패스워드 변경'
										  END "type"
										,TABLE_NM  AS	"tableNm"
										,MENU_NM   AS	"menuNm"
										,IP        AS	"ip"
										,TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS "regDate"
										,CONNECT_IP AS	"connectIp"
		        			   	   FROM T_FILTER_ACCESS
		        			   	   WHERE 1=1
							]]>
								<isNotEmpty prepend="AND" property="sdate">
									<![CDATA[ REG_DATE >= TO_DATE(#sdate#||'000000', 'YYYY-MM-DDHH24MISS')]]>
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="edate">
									<![CDATA[ REG_DATE <= TO_DATE(#edate#||'235959', 'YYYY-MM-DDHH24MISS')]]>
								</isNotEmpty>
								
								
								<isNotEmpty prepend="AND" property="loginId">
									LOGIN_ID = #loginId#
								</isNotEmpty>
								
								<isNotEmpty prepend="AND" property="searchKeyword">
									<![CDATA[ LOGIN_ID like '%' || #searchKeyword#  || '%' ]]>
								</isNotEmpty>
								
							<![CDATA[
							ORDER BY TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS') DESC
						    ) ALL_LIST
						    )
					 		WHERE  RNUM  > #firstIndex#
						    AND  RNUM <= #firstIndex# + #recordCountPerPage#
					        ]]>
	</select>

	<select id="selectAccessIndiListTotCnt" parameterClass="accessManageVO" resultClass="int">
		<![CDATA[
			SELECT  COUNT(*) totcnt
			  FROM  T_FILTER_ACCESS
			WHERE 1=1
		]]>
			<isNotEmpty prepend="AND" property="sdate">
				<![CDATA[ REG_DATE >= TO_DATE(#sdate#||'000000', 'YYYY-MM-DDHH24MISS')]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="edate">
				<![CDATA[ REG_DATE <= TO_DATE(#edate#||'235959', 'YYYY-MM-DDHH24MISS')]]>
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="searchKeyword">
				<![CDATA[ LOGIN_ID like '%' || #searchKeyword#  || '%' ]]>
			</isNotEmpty>
	</select>

	<select id="selectAccessChangeInfoList" parameterClass="accessManageVO" resultClass="egovMap">
		<![CDATA[
                WITH T_ACCESS_DIS AS
				  (SELECT ROWNUM RN,
				    AA.*
				  FROM
				    (SELECT A.*
				    FROM t_member_history A
				    WHERE MEMBER_ID = #memberId#
				      AND TO_CHAR(HDATE, 'YYYY-MM-DD HH24:MI:SS') <= #hdate#
				    ORDER BY hseq DESC
				    ) AA
				  WHERE ROWNUM <= 2
				  )
		SELECT A.COLUMN_NAME 		AS "columnName"
			  ,A.AFTER_HISTORY 		AS "afterHistory"
			  ,A.BEF_HISTORY		AS "befHistory"
			  ,CASE WHEN NVL(A.AFTER_HISTORY,'') = NVL(A.BEF_HISTORY,'') THEN '변경없음'
			  		ELSE '변경' END "changeCheck"
		 FROM(
       			SELECT DECODE(C.NO, 1, 'MEMBER_ID', 2, 'PASSWORD', 3, 'PASSWORD_HINT', 4,'PASSWORD_REPLY' ,5,'MEMBER_NAME' ,6,'ZIP' ,7,'ADDR' ,8,'DET_ADDR' ,9,'MOBILE_NO' ,10,'GROUP_CODE' ,11,'FAX_NO' ,12,'EMAIL' ,14,'MEMBER_STATE' ,16,'OFFICE_NO' ,17,'OFFICE_NAME' ,18,'DEPT_NAME' ,19,'GRADE_NAME' ,20,'RIVER_NAME' ,21,'SPOT_NAME' ,22,'AREA_NAME' ,25,'DEPT_CODE' ,26,'DO_CODE' ,27,'CTY_CODE' ,28,'FACT_CODE' ,29,'ORGAN_CODE' ,30,'RIVER_ID' ,31,'DN') COLUMN_NAME,
				  MAX(DECODE(A.RN||C.NO2, '101', A.MEMBER_ID, '102', A.PASSWORD, '103', A.PASSWORD_HINT , '104',A.PASSWORD_REPLY , '105',A.MEMBER_NAME , '106',A.ZIP , '107',A.ADDR , '108',A.DET_ADDR , '109',A.MOBILE_NO , '110',A.GROUP_CODE , '111',A.FAX_NO , '112',A.EMAIL , '114',A.MEMBER_STATE , '116',A.OFFICE_NO , '117',A.OFFICE_NAME , '118',A.DEPT_NAME , '119',A.GRADE_NAME , '120',A.RIVER_NAME , '121',A.SPOT_NAME , '122',A.AREA_NAME , '125',A.DEPT_CODE , '126',A.DO_CODE , '127',A.CTY_CODE , '128',A.FACT_CODE , '129',A.ORGAN_CODE , '130',A.RIVER_ID , '131',A.DN )) AFTER_HISTORY,
				  MAX(DECODE(A.RN||C.NO2, '201', A.MEMBER_ID, '202', A.PASSWORD, '203', A.PASSWORD_HINT , '204',A.PASSWORD_REPLY , '205',A.MEMBER_NAME , '206',A.ZIP , '207',A.ADDR , '208',A.DET_ADDR , '209',A.MOBILE_NO , '210',A.GROUP_CODE , '211',A.FAX_NO , '212',A.EMAIL , '214',A.MEMBER_STATE , '216',A.OFFICE_NO , '217',A.OFFICE_NAME , '218',A.DEPT_NAME , '219',A.GRADE_NAME , '220',A.RIVER_NAME , '221',A.SPOT_NAME , '222',A.AREA_NAME , '225',A.DEPT_CODE , '226',A.DO_CODE , '227',A.CTY_CODE , '228',A.FACT_CODE , '229',A.ORGAN_CODE , '230',A.RIVER_ID , '231',A.DN )) BEF_HISTORY

				/*SELECT DECODE(C.NO, 1, 'MEMBER_ID', 2, 'PASSWORD', 3, 'PASSWORD_HINT', 4,'PASSWORD_REPLY' ,5,'MEMBER_NAME' ,6,'ZIP' ,7,'ADDR' ,8,'DET_ADDR' ,9,'MOBILE_NO' ,10,'GROUP_CODE' ,11,'FAX_NO' ,12,'EMAIL' ,13,'REG_DATE' ,14,'MEMBER_STATE' ,15,'UNIQ_ID' ,16,'OFFICE_NO' ,17,'OFFICE_NAME' ,18,'DEPT_NAME' ,19,'GRADE_NAME' ,20,'RIVER_NAME' ,21,'SPOT_NAME' ,22,'AREA_NAME' ,23,'CONNECT_IP' ,24,'CONNECT_DATE' ,25,'DEPT_CODE' ,26,'DO_CODE' ,27,'CTY_CODE' ,28,'FACT_CODE' ,29,'ORGAN_CODE' ,30,'RIVER_ID' ,31,'DN' ,32,'PRIVACY_AGREE' ,33,'PRIVACY_DT' ,34,'PASSWORD_DT' ) COLUMN_NAME,
				  MAX(DECODE(A.RN||C.NO2, '101', A.MEMBER_ID, '102', A.PASSWORD, '103', A.PASSWORD_HINT , '104',A.PASSWORD_REPLY , '105',A.MEMBER_NAME , '106',A.ZIP , '107',A.ADDR , '108',A.DET_ADDR , '109',A.MOBILE_NO , '110',A.GROUP_CODE , '111',A.FAX_NO , '112',A.EMAIL , '113',A.REG_DATE , '114',A.MEMBER_STATE , '115',A.UNIQ_ID , '116',A.OFFICE_NO , '117',A.OFFICE_NAME , '118',A.DEPT_NAME , '119',A.GRADE_NAME , '120',A.RIVER_NAME , '121',A.SPOT_NAME , '122',A.AREA_NAME , '123',A.CONNECT_IP , '124',A.CONNECT_DATE , '125',A.DEPT_CODE , '126',A.DO_CODE , '127',A.CTY_CODE , '128',A.FACT_CODE , '129',A.ORGAN_CODE , '130',A.RIVER_ID , '131',A.DN , '132',A.PRIVACY_AGREE , '133',A.PRIVACY_DT , '134',A.PASSWORD_DT )) AFTER_HISTORY,
				  MAX(DECODE(A.RN||C.NO2, '201', A.MEMBER_ID, '202', A.PASSWORD, '203', A.PASSWORD_HINT , '204',A.PASSWORD_REPLY , '205',A.MEMBER_NAME , '206',A.ZIP , '207',A.ADDR , '208',A.DET_ADDR , '209',A.MOBILE_NO , '210',A.GROUP_CODE , '211',A.FAX_NO , '212',A.EMAIL , '213',A.REG_DATE , '214',A.MEMBER_STATE , '215',A.UNIQ_ID , '216',A.OFFICE_NO , '217',A.OFFICE_NAME , '218',A.DEPT_NAME , '219',A.GRADE_NAME , '220',A.RIVER_NAME , '221',A.SPOT_NAME , '222',A.AREA_NAME , '223',A.CONNECT_IP , '224',A.CONNECT_DATE , '225',A.DEPT_CODE , '226',A.DO_CODE , '227',A.CTY_CODE , '228',A.FACT_CODE , '229',A.ORGAN_CODE , '230',A.RIVER_ID , '231',A.DN , '232',A.PRIVACY_AGREE , '233',A.PRIVACY_DT , '234',A.PASSWORD_DT )) BEF_HISTORY*/
				FROM
				  ( SELECT * FROM T_ACCESS_DIS
				  ) A,
				  (SELECT ROWNUM NO, TO_CHAR(ROWNUM, 'FM00') NO2 FROM DUAL CONNECT BY LEVEL <= 34) C
				WHERE 1   =1
				AND C.NO <= 34
				GROUP BY C.NO,DECODE(C.NO, 1, 'MEMBER_ID', 2, 'PASSWORD', 3, 'PASSWORD_HINT', 4,'PASSWORD_REPLY' ,5,'MEMBER_NAME' ,6,'ZIP' ,7,'ADDR' ,8,'DET_ADDR' ,9,'MOBILE_NO' ,10,'GROUP_CODE' ,11,'FAX_NO' ,12,'EMAIL' ,13,'REG_DATE' ,14,'MEMBER_STATE' ,15,'UNIQ_ID' ,16,'OFFICE_NO' ,17,'OFFICE_NAME' ,18,'DEPT_NAME' ,19,'GRADE_NAME' ,20,'RIVER_NAME' ,21,'SPOT_NAME' ,22,'AREA_NAME' ,23,'CONNECT_IP' ,24,'CONNECT_DATE' ,25,'DEPT_CODE' ,26,'DO_CODE' ,27,'CTY_CODE' ,28,'FACT_CODE' ,29,'ORGAN_CODE' ,30,'RIVER_ID' ,31,'DN' ,32,'PRIVACY_AGREE' ,33,'PRIVACY_DT' ,34,'PASSWORD_DT' )
				ORDER BY C.NO
			) A
		  WHERE NVL(A.AFTER_HISTORY,'U') != NVL(A.BEF_HISTORY,'U')
		]]>
	</select>


	<insert id="insertAccessLogin" parameterClass="accessManageVO">
		INSERT INTO T_FILTER_LOGIN (
		  SEQ
		 ,USER_ID
		 ,TYPE
		 ,UIP
		 ,UDOMAIN
		 ,UPAGE
		 ,UBROWSER
		 ,UOS
		   )
		VALUES (
		  SEQ_FILTER_LOGIN.NEXTVAL
		 , #userId#
		 , #type#
		 , SYS_CONTEXT('USERENV', 'IP_ADDRESS')
		 , #udomain#
		 , #upage#
		 , #ubrowser#
		 , #uos#
		 )
	</insert>


	<select id="selectAccessLoginList" parameterClass="accessManageVO" resultClass="egovMap">
		<![CDATA[
                SELECT  /*+ INDEX_DESC(ALL_LIST T_FILTER_LOGIN_IDX01) */ *
			  	FROM  (
					SELECT ROWNUM RNUM, ALL_LIST.*
			 			 FROM  (
		        			   	 SELECT
		        			   	 		 USER_ID  AS	"userId"
										,CASE WHEN TYPE='LOGIN' THEN '로그인'
											  WHEN TYPE='LOGOUT' THEN '로그아웃'
										 	  WHEN TYPE='PAGE' THEN '페이지이동'
										  END "type"
										,UIP        AS	"uip"
										,UDOMAIN    AS	"udomain"
										,UPAGE  	AS	"upage"
										,UBROWSER  	AS	"ubrowser"
										,UOS		AS	"uos"
										,TO_CHAR(REG_DATE, 'YYYY.MM.DD HH24:MI:SS') AS "regDate"
		        			   	   FROM T_FILTER_LOGIN a
		        			   	   WHERE 1=1
							]]>
								<isNotEmpty prepend="AND" property="sdate">
									<![CDATA[ REG_DATE >= TO_DATE(#sdate#||'000000', 'YYYY-MM-DDHH24MISS')]]>
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="edate">
									<![CDATA[ REG_DATE <= TO_DATE(#edate#||'235959', 'YYYY-MM-DDHH24MISS')]]>
								</isNotEmpty>
								
								<isNotEmpty prepend="AND" property="type" >
									<![CDATA[ TYPE = #type# ]]>
								</isNotEmpty>
								
								<isNotEmpty prepend="AND" property="loginId">
									USER_ID = #loginId#
								</isNotEmpty>
								
								<isNotEmpty prepend="AND" property="searchKeyword">
									<![CDATA[ user_id like '%' || #searchKeyword#  || '%' ]]>
								</isNotEmpty>
							<![CDATA[
							ORDER BY REG_DATE DESC
						    ) ALL_LIST
						    WHERE ROWNUM <= #firstIndex# + #recordCountPerPage#
						    )
					 		WHERE  RNUM  > #firstIndex#
					        ]]>
	</select>

	<select id="selectAccessLoginListTotCnt" parameterClass="accessManageVO" resultClass="int">
		<![CDATA[
			SELECT  COUNT(*) totcnt
			  FROM  T_FILTER_LOGIN
			WHERE 1=1
		]]>
			<isNotEmpty prepend="AND" property="sdate">
				<![CDATA[ REG_DATE >= TO_DATE(#sdate#||'000000', 'YYYY-MM-DDHH24MISS')]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="edate">
				<![CDATA[ REG_DATE <= TO_DATE(#edate#||'235959', 'YYYY-MM-DDHH24MISS')]]>
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="type" >
				<![CDATA[ TYPE = #type# ]]>
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="searchKeyword">
				<![CDATA[ user_id like '%' || #searchKeyword#  || '%' ]]>
			</isNotEmpty>
	</select>

</sqlMap>